name: Build
on: [push]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache Docker layers
        uses: jpribyl/action-docker-layer-caching@v0.1.1

      - name: Build Docker image
        run: docker build -t atari-legend Docker/php/

      - name: Get npm cache directory
        id: npm-cache-dir
        shell: bash
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}

      - name: Cache node_modules/
        uses: actions/cache@v3
        id: npm-cache
        with:
            path: ${{ steps.npm-cache-dir.outputs.dir }}
            key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
            restore-keys: ${{ runner.os }}-node-

      - name: Install NPM modules
        run: docker run -v $PWD:/data -w /data atari-legend npm install

      - name: Install Composer dependencies
        run: docker run -v $PWD:/data atari-legend composer install -d /data/public/php/

      - name: Run Grunt
        run: docker run -v $PWD:/data -w /data atari-legend npm run grunt

      # Preserve generated files (e.g. style.css) for the next workflow steps
      - name: Save generated files
        uses: actions/upload-artifact@v2
        with:
          name: website
          path: public/

  deploy-dev:
    name: Deploy development
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/development'
    steps:
      - uses: actions/checkout@v2
      # Restore generated files from previous step
      - uses: actions/download-artifact@v2
        with:
          name: website
          path: public/
      - name: Deploy
        run: |
          eval "$(ssh-agent -s)"
          ssh-add - <<< "${{ secrets.DEPLOY_SSH_KEY }}"
          ./.github/workflows/deploy.sh "${{ secrets.PROD_DEPLOY_USER }}" "${{ secrets.PROD_DEPLOY_HOST }}" "legacydev.atarilegend.com"

  deploy-prod:
    name: Deploy production
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
      # Restore generated files from previous step
      - uses: actions/download-artifact@v2
        with:
          name: website
          path: public/
      - name: Deploy
        run: |
          eval "$(ssh-agent -s)"
          ssh-add - <<< "${{ secrets.DEPLOY_SSH_KEY }}"
          ./.github/workflows/deploy.sh "${{ secrets.PROD_DEPLOY_USER }}" "${{ secrets.PROD_DEPLOY_HOST }}" "legacy.atarilegend.com"
